#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9 (swiftlang-5.9.0.128.108 clang-1500.0.40.1)
#ifndef WSIMAPSDK_SWIFT_H
#define WSIMAPSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import CoreLocation;
@import Foundation;
@import MapKit;
@import ObjectiveC;
@import PangeaSDK;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="WSIMapSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class DefaultFeature;
@protocol Overlay;

SWIFT_RESILIENT_CLASS("_TtC9WSIMapSDK17FeatureDataStyler")
@interface FeatureDataStyler : DefaultFeatureStyler
/// Style a given feature. If a feature already has an <code>Overlay</code> it will just be returned.
- (id <Overlay> _Nullable)styleWithFeature:(DefaultFeature * _Nonnull)feature SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_RESILIENT_CLASS("_TtC9WSIMapSDK15GRAFProductInfo")
@interface GRAFProductInfo : RasterProductInfo
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PWLayerCoverageType, open) {
  PWLayerCoverageTypeInvalid = 0,
  PWLayerCoverageTypeCoverageAll = 1,
  PWLayerCoverageTypeCoverageLand = 2,
  PWLayerCoverageTypeCoverageWater = 3,
};

typedef SWIFT_ENUM(NSInteger, PWLayerDataState, open) {
  PWLayerDataStatePastOnly = 0,
  PWLayerDataStatePastAndFuture = 1,
  PWLayerDataStateFutureOnly = 2,
};

typedef SWIFT_ENUM(NSInteger, PWLayerType, open) {
  PWLayerTypeInvalid = 0,
  PWLayerTypeFeatureAlerts = 1,
  PWLayerTypeFeatureCurrentConditions = 2,
  PWLayerTypeFeatureEarthquakes = 3,
  PWLayerTypeFeatureGenericPoint = 4,
  PWLayerTypeFeatureLightning = 5,
  PWLayerTypeFeatureStormTracks = 6,
  PWLayerTypeFeatureTemperaturePlots = 7,
  PWLayerTypeFeatureTrafficFlow = 8,
  PWLayerTypeFeatureTrafficIncidents = 9,
  PWLayerTypeFeatureTropicalTracks = 10,
  PWLayerTypeLocalRadar = 11,
  PWLayerTypeRaster = 12,
};


SWIFT_CLASS("_TtC9WSIMapSDK15PWLayersManager")
@interface PWLayersManager : NSObject
+ (PWLayersManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9WSIMapSDK18PWMapLayersManager")
@interface PWMapLayersManager : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (PWMapLayersManager * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, PWMapStyle, open) {
  PWMapStyleNone = 0,
  PWMapStyleCustom = 1,
  PWMapStyleCustom2 = 2,
  PWMapStyleCustom3 = 3,
  PWMapStyleB2BSatelliteDarkWithLabels = 4,
  PWMapStyleB2BSatelliteLightWithLabels = 5,
  PWMapStyleB2BTerrainDarkWithLabels = 6,
  PWMapStyleB2BTerrainLightWithLabels = 7,
  PWMapStyleWUSatelliteNoLabels = 8,
};

@class NSCoder;

SWIFT_RESILIENT_CLASS("_TtC9WSIMapSDK9PWMapView")
@interface PWMapView : PangeaMapView
- (NSInteger)accessibilityElementCount SWIFT_WARN_UNUSED_RESULT;
- (id _Nullable)accessibilityElementAtIndex:(NSInteger)index SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)indexOfAccessibilityElement:(id _Nonnull)element SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PWUnitsType, open) {
  PWUnitsTypeImperial = 0,
  PWUnitsTypeMetric = 1,
};

@class NSString;
@class UIView;
@protocol PangeaWrapperProtocol;
@class UIImage;

SWIFT_CLASS("_TtC9WSIMapSDK13PangeaWrapper")
@interface PangeaWrapper : NSObject
+ (PangeaWrapper * _Nonnull)sharedInstance SWIFT_WARN_UNUSED_RESULT;
- (double)getActiveRasterLayerFrameTime SWIFT_WARN_UNUSED_RESULT;
- (void)resetSweepArmAnnotations;
+ (NSString * _Nonnull)getVersionString SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getPangeaSDKVersionString SWIFT_WARN_UNUSED_RESULT;
+ (void)setDebugLogLevel:(NSUInteger)level;
+ (void)setUseDeviceLogs:(BOOL)useDeviceLogs;
- (void)initializeWithContainingView:(UIView * _Nonnull)containingView delegate:(id <PangeaWrapperProtocol> _Nonnull)delegate mapStyle:(enum PWMapStyle)mapStyle enableMap:(BOOL)enableMap;
- (void)setForceMapResetOnForeground:(BOOL)val;
- (void)setForceMapResetOnForegroundOnce;
- (void)forceMapReset;
@property (nonatomic) BOOL showUserLocation;
- (CLLocationCoordinate2D)getMapCenterCoordinate SWIFT_WARN_UNUSED_RESULT;
- (double)getMapZoomLevel SWIFT_WARN_UNUSED_RESULT;
- (MKCoordinateRegion)getMapRegion SWIFT_WARN_UNUSED_RESULT;
- (CLLocationCoordinate2D)getCoordinateFromMapWithPoint:(CGPoint)point SWIFT_WARN_UNUSED_RESULT;
- (void)setMapCenterWithCoordinate:(CLLocationCoordinate2D)coordinate zoomLevel:(double)zoomLevel animated:(BOOL)animated;
- (void)setMapCenterWithCoordinate:(CLLocationCoordinate2D)coordinate animated:(BOOL)animated;
- (void)setMapZoomLevel:(double)zoomLevel animated:(BOOL)animated;
- (void)setMapStyle:(enum PWMapStyle)styleType;
- (enum PWMapStyle)getMapStyle SWIFT_WARN_UNUSED_RESULT;
- (void)setMapStyle:(NSString * _Nonnull)styleString roadsAndLinesLayerName:(NSString * _Nullable)roadsAndLinesLayerName labelsAndShieldsLayerName:(NSString * _Nullable)labelsAndShieldsLayerName;
- (void)configureLayerForPWID:(NSString * _Nonnull)pwID productSet:(NSString * _Nonnull)productSet layerType:(enum PWLayerType)layerType observedProductKeys:(NSArray<NSString *> * _Nonnull)observedProductKeys predictedProductKeys:(NSArray<NSString *> * _Nonnull)predictedProductKeys coverageType:(enum PWLayerCoverageType)coverageType orderingRank:(NSInteger)orderingRank transparencyPercent:(CGFloat)transparencyPercent rangeObservedMinutes:(NSInteger)rangeObservedMinutes rangePredictedMinutes:(NSInteger)rangePredictedMinutes stepSizeSeconds:(int64_t)stepSizeSeconds;
- (void)configureLayerInfoForPWID:(NSString * _Nonnull)pwID layerInfoList:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)layerInfoList;
- (void)enableAlertCategory:(NSString * _Nonnull)category;
- (void)disableAlertCategory:(NSString * _Nonnull)category;
- (BOOL)isAlertCategoryEnabled:(NSString * _Nonnull)category SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getNumEnabledAlertCategories SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSString *> * _Nonnull)getAlertCategories SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getAlertMinimumPriority SWIFT_WARN_UNUSED_RESULT;
- (void)resetAlertMinimumPriority;
- (void)setAlertMinimumPriority:(NSInteger)priority;
- (BOOL)getEmphasizeOutlines SWIFT_WARN_UNUSED_RESULT;
- (void)setEmphasizeOutlines:(BOOL)val;
- (void)toggleEmphasizeOutlines;
- (BOOL)getPutOverRoads SWIFT_WARN_UNUSED_RESULT;
- (void)setPutOverRoads:(BOOL)val;
- (void)togglePutOverRoads;
- (BOOL)getShowAllAlerts SWIFT_WARN_UNUSED_RESULT;
- (void)setShowAllAlerts:(BOOL)val;
- (void)toggleShowAllAlerts;
- (void)configureLocalRadarForPWID:(NSString * _Nonnull)pwID location:(CLLocationCoordinate2D)location radiusMeters:(double)radiusMeters sweepTimeSeconds:(CFTimeInterval)sweepTimeSeconds sweepArmOpacity:(CGFloat)sweepArmOpacity sweepArmImageName:(NSString * _Nonnull)sweepArmImageName;
- (void)updateLocalRadarForPWID:(NSString * _Nonnull)pwID sweepTimeSeconds:(CFTimeInterval)sweepTimeSeconds sweepArmOpacity:(CGFloat)sweepArmOpacity sweepArmImageName:(NSString * _Nonnull)sweepArmImageName;
- (void)setAccessibilityEnabled:(BOOL)value;
- (void)setLocalRadarHideSweepArmWhenLooping:(BOOL)value;
- (void)setLocalRadarShowSweepArmScrubbingRange:(double)value;
- (BOOL)isFeatureForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (void)featuresRequestDetails:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)featureInfoList;
- (void)featuresCancelRequestDetails;
- (void)hideLayerForPWID:(NSString * _Nonnull)pwID;
- (void)showLayerForPWID:(NSString * _Nonnull)pwID;
- (void)setLayerForPWID:(NSString * _Nonnull)pwID regionLocation:(CLLocationCoordinate2D)regionLocation radiusMeters:(double)radiusMeters;
- (void)setLayerForPWID:(NSString * _Nonnull)pwID regionLocation:(CLLocationCoordinate2D)regionLocation;
- (void)setLayerForPWID:(NSString * _Nonnull)pwID radiusMeters:(double)radiusMeters;
- (CLLocationCoordinate2D)getRegionLocationForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (double)getRegionRadiusMetersForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (enum PWLayerDataState)getLayerDataState SWIFT_WARN_UNUSED_RESULT;
- (void)setLayerDataState:(enum PWLayerDataState)state;
- (void)setOverlaysMasked:(BOOL)masked;
- (CGFloat)getTransparencyPercentForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (void)setTransparencyPercentForPWID:(NSString * _Nonnull)pwID transparencyPercent:(CGFloat)transparencyPercent;
- (int64_t)getLoopingDwellTimeMS SWIFT_WARN_UNUSED_RESULT;
- (void)setLoopingDwellTimeMS:(int64_t)animatorDwellTimeMS;
- (CGFloat)getTouchSizeAnnotation SWIFT_WARN_UNUSED_RESULT;
- (void)setTouchSizeAnnotation:(CGFloat)touchSize;
- (CGFloat)getTouchSizeFeature SWIFT_WARN_UNUSED_RESULT;
- (void)setTouchSizeFeature:(CGFloat)touchSize;
- (BOOL)getIsLooping SWIFT_WARN_UNUSED_RESULT;
- (void)setIsLooping:(BOOL)newValue;
- (void)addSweepArmAnnotationForPWID:(NSString * _Nonnull)pwID;
- (void)removeSweepArmAnnotationForPWID:(NSString * _Nonnull)pwID;
- (void)updateSweepArmAnnotationForPWID:(NSString * _Nonnull)pwID;
- (void)hideViewBasedAnnotations;
- (void)showViewBasedAnnotations;
- (void)pauseLooping:(double)timeSpan;
- (void)unPauseLooping;
- (NSInteger)getRangeObservedMinutesForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getRangePredictedMinutesForPWID:(NSString * _Nonnull)pwID SWIFT_WARN_UNUSED_RESULT;
- (void)setActiveRasterLayerTime:(double)timeIntervalSince1970;
- (double)getLayerDataOffset SWIFT_WARN_UNUSED_RESULT;
- (void)setLayerDataOffset:(double)newOffset;
- (NSDictionary<NSString *, NSDictionary<NSString *, NSArray<NSNumber *> *> *> * _Nullable)getActiveRasterLayerData SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSString *> * _Nullable)getActiveRasterLayerFrameInfo SWIFT_WARN_UNUSED_RESULT;
- (enum PWUnitsType)getDistanceUnits SWIFT_WARN_UNUSED_RESULT;
- (enum PWUnitsType)getWeatherUnits SWIFT_WARN_UNUSED_RESULT;
- (void)setDistanceUnits:(enum PWUnitsType)units;
- (void)setWeatherUnits:(enum PWUnitsType)units;
- (void)setMapboxAttributionMasked:(BOOL)masked;
- (void)setMapboxButtonDisabled:(BOOL)disabled;
- (void)setMapboxButtonHidden:(BOOL)hidden;
- (void)setMapboxLogoHidden:(BOOL)hidden;
- (CGRect)getMapboxButtonFrame SWIFT_WARN_UNUSED_RESULT;
- (CGRect)getMapboxLogoFrame SWIFT_WARN_UNUSED_RESULT;
- (void)setMapboxButtonOffset:(CGPoint)buttonOffset logoOffset:(CGPoint)logoOffset;
- (void)clearCache;
+ (NSInteger)getLabelsAndShieldsRank SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getRoadsAndLinesRank SWIFT_WARN_UNUSED_RESULT;
- (void)addImageAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID coordinate:(CLLocationCoordinate2D)coordinate image:(UIImage * _Nonnull)image;
- (void)removeImageAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID;
- (void)updateImageAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID coordinate:(CLLocationCoordinate2D)coordinate image:(UIImage * _Nonnull)image;
- (void)addViewAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID coordinate:(CLLocationCoordinate2D)coordinate view:(UIView * _Nonnull)view;
- (void)removeViewAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID;
- (void)updateViewAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID coordinate:(CLLocationCoordinate2D)coordinate;
- (CLLocationCoordinate2D)getLocationForViewAnnotationWithUniqueID:(NSString * _Nonnull)uniqueID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIGestureRecognizer;

SWIFT_PROTOCOL("_TtP9WSIMapSDK21PangeaWrapperProtocol_")
@protocol PangeaWrapperProtocol
- (void)pwActiveRasterLayerDataChanged;
- (void)pwActiveRasterLayerFrameChanged;
- (void)pwMapAnnotationsTapped:(UIGestureRecognizer * _Nonnull)gestureRecognizer tapCoordinate:(CLLocationCoordinate2D)tapCoordinate annotationInfoList:(NSArray<NSString *> * _Nonnull)annotationInfoList;
- (void)pwMapFeaturesGotDetails:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)featureInfoList;
- (void)pwMapFeaturesTapped:(UIGestureRecognizer * _Nonnull)gestureRecognizer featureInfoList:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nonnull)featureInfoList hasDetails:(BOOL)hasDetails;
- (void)pwMapGestureOneFingerSingleTap:(UIGestureRecognizer * _Nonnull)gestureRecognizer;
- (void)pwMapRegionDidChange;
- (void)pwMapRegionWillChange;
- (void)pwMapViewDidFinishLoading;
- (void)pwMapViewDidStartLoading;
- (void)pwMapZoomLevelDidChange;
- (NSDictionary<NSString *, NSObject *> * _Nullable)pwStyleForDefaultUserLocationAnnotationView SWIFT_WARN_UNUSED_RESULT;
@end


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
